AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: '{{name}} deployment'
Parameters:
  Env:
    Description: The environment name.
    Type: String
    Default: dev
Resources:
{{#each (sortBy resources 'type')}}
  {{toClassName type}}Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../..
      Environment:
        Variables:
          ENV: !Ref Env
      Events:
{{#each (sortBy operations 'method')}}
        {{operationToUniqueName .}}:
          Type: Api
          Properties:
            Path: '{{pathToSwagger path}}'
            Method: {{toLowerCase method}}
{{/each}}
        Ping:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
            Input: '{"httpMethod": "PING"}'
      FunctionName: !Sub '${AWS::StackName}-{{toSnakeCase type '-'}}'
      Handler: src/main/js/handlers/{{toSnakeCase type}}/index.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Action:
              - secretsmanager:GetSecretValue
              Effect: Allow
              Resource: '*'
            - Action:
              - kms:Decrypt
              Effect: Allow
              Resource: '*'
      Runtime: nodejs8.10
  {{toClassName type}}FunctionLogRetention:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ {{toClassName type}}Function}'
      RetentionInDays: 7
{{/each}}
Outputs:
{{#each (sortBy resources 'type')}}
  {{toClassName type}}Function:
    Description: The name of the Lambda function for the {{toClassName type}} model
    Value: !Ref {{toClassName type}}Function
    Export:
      Name: !Sub '${AWS::StackName}-functions-{{toClassName type}}'
  {{toClassName type}}FunctionRole:
    Description: The name of the Lambda function role for the {{toClassName type}} model
    Value: !Ref {{toClassName type}}FunctionRole
    Export:
      Name: !Sub '${AWS::StackName}-roles-{{toClassName type}}'
{{/each}}
